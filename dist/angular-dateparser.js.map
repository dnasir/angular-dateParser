{"version":3,"sources":["DateParser.ts","DateParserDirective.ts"],"names":[],"mappings":"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","file":"angular-dateparser.js","sourcesContent":["///<reference path=\"../all.d.ts\"/>\r\n\r\nmodule NgDateParser {\r\n    export interface IDateParser {\r\n        (val: any, format?: string): Date;\r\n    }\r\n\r\n    class DateParser implements ng.IServiceProvider {\r\n        'use strict';\r\n\r\n        private $dateFilter: ng.IFilterDate;\r\n        private $locale: ng.ILocaleService;\r\n        private datetimeFormats: ng.ILocaleDateTimeFormatDescriptor;\r\n        private monthNames: string[];\r\n        private dayNames: string[];\r\n        private cache: string[];\r\n        private _watchLocale: boolean;\r\n\r\n        constructor() {\r\n            // Regex pattern cache\r\n            this.cache = [];\r\n            this._watchLocale = false;\r\n            this.$get.$inject = ['$filter', '$locale', '$rootScope'];\r\n        }\r\n\r\n        updateFromLocale() {\r\n            this.datetimeFormats = this.$locale.DATETIME_FORMATS;\r\n            this.monthNames = this.datetimeFormats.MONTH.concat(this.datetimeFormats.SHORTMONTH);\r\n            this.dayNames = this.datetimeFormats.DAY.concat(this.datetimeFormats.SHORTDAY);\r\n        }\r\n\r\n        watchLocale(watch?: boolean) {\r\n            if (angular.isDefined(watch)) {\r\n                this._watchLocale = watch;\r\n            } else {\r\n                return this._watchLocale;\r\n            }\r\n        }\r\n\r\n        $get = ($filter: ng.IFilterService, $locale: ng.ILocaleService, $rootScope: ng.IRootScopeService) => {\r\n            this.$locale = $locale;\r\n            this.$dateFilter = $filter('date');\r\n\r\n            this.updateFromLocale();\r\n\r\n            if (this._watchLocale) {\r\n                $rootScope.$watchCollection(() => $locale, () => {\r\n                    this.updateFromLocale();\r\n                });\r\n            }\r\n\r\n            return this.parse;\r\n        }\r\n\r\n        private parse: IDateParser = (val: any, format?: string): Date => {\r\n            // if it's a Date object, return as-is\r\n            if (angular.isDate(val)) {\r\n                return val;\r\n            }\r\n\r\n            // if it's anything other than a string, reject it\r\n            if (!angular.isString(val)) {\r\n                return undefined;\r\n            }\r\n\r\n            try {\r\n                // If no format is provided, just pass it to the Date constructor\r\n                if (!format.length) {\r\n                    return new Date(val);\r\n                }\r\n\r\n                // Check if format exists in the format collection\r\n                if (this.datetimeFormats != null && this.datetimeFormats[format]) {\r\n                    format = this.datetimeFormats[format];\r\n                }\r\n\r\n                // Initial values\r\n                var now = new Date(),\r\n                    i_val = 0,\r\n                    i_format = 0,\r\n                    format_token = '',\r\n                    year = null,\r\n                    week = null,\r\n                    month = null,\r\n                    date = null,\r\n                    hh = 0,\r\n                    mm = 0,\r\n                    ss = 0,\r\n                    sss = 0,\r\n                    ampm = 'am',\r\n                    z = 0,\r\n                    parsedZ = false;\r\n                \r\n                // FIX: don't take the current date, it could have a day of the month that is higher than the parsed date\r\n                // example: parse \"February 2013\" with the current date of \"30 April 2013\"\r\n                now = new Date(now.getFullYear(), now.getMonth(), 1);\r\n\r\n                // TODO: Extract this into a helper function perhaps?\r\n                while (i_format < format.length) {\r\n                    // Get next token from format string\r\n                    format_token = format.charAt(i_format);\r\n\r\n                    var token = '';\r\n\r\n                    // TODO: Handle double single quotes\r\n                    // Handle quote marks for strings within format string\r\n                    if (format.charAt(i_format) === \"'\") {\r\n                        var _i_format = i_format;\r\n\r\n                        while ((format.charAt(++i_format) !== \"'\") && (i_format < format.length)) {\r\n                            token += format.charAt(i_format);\r\n                        }\r\n\r\n                        if (val.substring(i_val, i_val + token.length) !== token) {\r\n                            throw 'Pattern value mismatch';\r\n                        }\r\n\r\n                        i_val += token.length;\r\n                        i_format++;\r\n\r\n                        continue;\r\n                    }\r\n\r\n                    while ((format.charAt(i_format) === format_token) && (i_format < format.length)) {\r\n                        token += format.charAt(i_format++);\r\n                    }\r\n\r\n                    // Extract contents of value based on format token\r\n                    if (token === 'yyyy' || token === 'yy' || token === 'y') {\r\n                        var minLength, maxLength;\r\n\r\n                        if (token === 'yyyy') {\r\n                            minLength = 4;\r\n                            maxLength = 4;\r\n                        }\r\n\r\n                        if (token === 'yy') {\r\n                            minLength = 2;\r\n                            maxLength = 2;\r\n                        }\r\n\r\n                        if (token === 'y') {\r\n                            minLength = 2;\r\n                            maxLength = 4;\r\n                        }\r\n\r\n                        year = this.getInteger(val, i_val, minLength, maxLength);\r\n\r\n                        if (year === null) {\r\n                            throw 'Invalid year';\r\n                        }\r\n\r\n                        i_val += Math.max(year.toString().length, token.length);\r\n\r\n                        if (year.toString().length === 2) {\r\n                            if (year > 70) {\r\n                                year = 1900 + (year - 0);\r\n                            } else {\r\n                                year = 2000 + (year - 0);\r\n                            }\r\n                        }\r\n                    } else if (token === 'ww' || token === 'w') {\r\n                        week = this.getInteger(val, i_val, token.length, 2);\r\n\r\n                        i_val += Math.max(week.toString().length, token.length);\r\n                    } else if (token === 'MMMM' || token === 'MMM') {\r\n                        month = 0;\r\n\r\n                        for (var i = 0; i < this.monthNames.length; i++) {\r\n                            var month_name = this.monthNames[i];\r\n\r\n                            if (val.substring(i_val, i_val + month_name.length).toLowerCase() === month_name.toLowerCase()) {\r\n                                month = i + 1;\r\n                                if (month > 12) {\r\n                                    month -= 12;\r\n                                }\r\n\r\n                                i_val += month_name.length;\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if ((month < 1) || (month > 12)) {\r\n                            throw 'Invalid month';\r\n                        }\r\n                    } else if (token === 'EEEE' || token === 'EEE') {\r\n                        for (var j = 0; j < this.dayNames.length; j++) {\r\n                            var day_name = this.dayNames[j];\r\n\r\n                            if (val.substring(i_val, i_val + day_name.length).toLowerCase() === day_name.toLowerCase()) {\r\n                                i_val += day_name.length;\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else if (token === 'MM' || token === 'M') {\r\n                        month = this.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (month === null || (month < 1) || (month > 12)) {\r\n                            throw 'Invalid month';\r\n                        }\r\n\r\n                        i_val += Math.max(month.toString().length, token.length);\r\n                    } else if (token === 'dd' || token === 'd') {\r\n                        date = this.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (date === null || (date < 1) || (date > 31)) {\r\n                            throw 'Invalid date';\r\n                        }\r\n\r\n                        i_val += Math.max(date.toString().length, token.length);\r\n                    } else if (token === 'HH' || token === 'H') {\r\n                        hh = this.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (hh === null || (hh < 0) || (hh > 23)) {\r\n                            throw 'Invalid hours';\r\n                        }\r\n\r\n                        i_val += Math.max(hh.toString().length, token.length);\r\n                    } else if (token === 'hh' || token === 'h') {\r\n                        hh = this.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (hh === null || (hh < 1) || (hh > 12)) {\r\n                            throw 'Invalid hours';\r\n                        }\r\n\r\n                        i_val += Math.max(hh.toString().length, token.length);\r\n                    } else if (token === 'mm' || token === 'm') {\r\n                        mm = this.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (mm === null || (mm < 0) || (mm > 59)) {\r\n                            throw 'Invalid minutes';\r\n                        }\r\n\r\n                        i_val += Math.max(mm.toString().length, token.length);\r\n                    } else if (token === 'ss' || token === 's') {\r\n                        ss = this.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (ss === null || (ss < 0) || (ss > 59)) {\r\n                            throw 'Invalid seconds';\r\n                        }\r\n\r\n                        i_val += Math.max(ss.toString().length, token.length);\r\n                    } else if (token === 'sss') {\r\n                        sss = this.getInteger(val, i_val, 3, 3);\r\n\r\n                        if (sss === null || (sss < 0) || (sss > 999)) {\r\n                            throw 'Invalid milliseconds';\r\n                        }\r\n\r\n                        i_val += 3;\r\n                    } else if (token === 'a') {\r\n                        if (val.substring(i_val, i_val + 2).toLowerCase() === 'am') {\r\n                            ampm = 'AM';\r\n                        } else if (val.substring(i_val, i_val + 2).toLowerCase() === 'pm') {\r\n                            ampm = 'PM';\r\n                        } else {\r\n                            throw 'Invalid AM/PM';\r\n                        }\r\n\r\n                        i_val += 2;\r\n                    } else if (token === 'Z') {\r\n                        parsedZ = true;\r\n\r\n                        if (val[i_val] === 'Z') {\r\n                            z = 0;\r\n\r\n                            i_val += 1;\r\n                        } else {\r\n                            if (val[i_val + 3] === ':') {\r\n                                var tzStr = val.substring(i_val, i_val + 6);\r\n\r\n                                z = (parseInt(tzStr.substr(0, 3), 10) * 60) + parseInt(tzStr.substr(4, 2), 10);\r\n\r\n                                i_val += 6;\r\n                            } else {\r\n                                var tzStr = val.substring(i_val, i_val + 5);\r\n\r\n                                z = (parseInt(tzStr.substr(0, 3), 10) * 60) + parseInt(tzStr.substr(3, 2), 10);\r\n\r\n                                i_val += 5;\r\n                            }\r\n                        }\r\n\r\n                        if (z > 720 || z < -720) {\r\n                            throw 'Invalid timezone';\r\n                        }\r\n                    } else {\r\n                        if (val.substring(i_val, i_val + token.length) !== token) {\r\n                            throw 'Pattern value mismatch';\r\n                        } else {\r\n                            i_val += token.length;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // If there are any trailing characters left in the value, it doesn't match\r\n                if (i_val !== val.length) {\r\n                    throw 'Pattern value mismatch';\r\n                }\r\n\r\n                // Is date valid for month?\r\n                if (month === 2) {\r\n                    // Check for leap year\r\n                    if (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)) { // leap year\r\n                        if (date > 29) {\r\n                            throw 'Invalid date';\r\n                        }\r\n                    } else {\r\n                        if (date > 28) {\r\n                            throw 'Invalid date';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ((month === 4) || (month === 6) || (month === 9) || (month === 11)) {\r\n                    if (date > 30) {\r\n                        throw 'Invalid date';\r\n                    }\r\n                }\r\n\r\n                // Correct hours value\r\n                if (hh < 12 && ampm === 'PM') {\r\n                    hh += 12;\r\n                } else if (hh > 11 && ampm === 'AM') {\r\n                    hh -= 12;\r\n                }\r\n\r\n                var localDate = new Date(year || now.getFullYear(), (month !== null ? month - 1 : now.getMonth()), date || now.getDate(), hh, mm, ss, sss);\r\n                if (week !== null) {\r\n                    var dateFromISOWeek = this.getDateOfISOWeek(week, year || now.getFullYear(), month, date);\r\n                    if (dateFromISOWeek) {\r\n                        if (month !== null) {\r\n                            dateFromISOWeek.setMonth(month - 1);\r\n                        }\r\n                        if (date !== null) {\r\n                            dateFromISOWeek.setDate(date);\r\n                        }\r\n\r\n                        dateFromISOWeek.setHours(hh);\r\n                        dateFromISOWeek.setMinutes(mm);\r\n                        dateFromISOWeek.setSeconds(ss);\r\n                        dateFromISOWeek.setMilliseconds(sss);\r\n\r\n                        localDate = dateFromISOWeek;\r\n                    } else {\r\n                        throw 'Invalid week number or week number/date mismatch';\r\n                    }\r\n                }\r\n\r\n                if (parsedZ) {\r\n                    return new Date(localDate.getTime() - (z + localDate.getTimezoneOffset()) * 60000);\r\n                }\r\n\r\n                return localDate;\r\n            } catch (e) {\r\n                console.info(e);\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        private getInteger(input: string, startPoint: number, minLength: number, maxLength: number): number {\r\n            var val = input.substring(startPoint);\r\n            var key = `${minLength}_${maxLength}`;\r\n            var matcher = this.cache[key];\r\n            if (!matcher) {\r\n                matcher = new RegExp(`^(\\\\d{${minLength},${maxLength}})`);\r\n                this.cache[key] = matcher;\r\n            }\r\n\r\n            var match = matcher.exec(val);\r\n            if (match) {\r\n                return Number(match[1]);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        private getDateOfISOWeek(week: number, year: number, month?: number, date?: number): Date {\r\n            if (week < 1) return undefined;\r\n\r\n            var simple = new Date(year, 0, 1 + (week - 1) * 7);\r\n            var dow = simple.getDay();\r\n            var ISOweekStart = simple;\r\n\r\n            if (dow <= 4) {\r\n                ISOweekStart.setDate(simple.getDate() - simple.getDay() + 1);\r\n            } else {\r\n                ISOweekStart.setDate(simple.getDate() + 8 - simple.getDay());\r\n            }\r\n\r\n            if (ISOweekStart.getFullYear() !== year) {\r\n                return undefined;\r\n            }\r\n\r\n            if (month !== null) {\r\n                if (ISOweekStart.getMonth() !== month - 1) {\r\n                    return undefined;\r\n                }\r\n            }\r\n\r\n            if (date !== null) {\r\n                var isoWeekDate = ISOweekStart.getDate();\r\n                if (date < isoWeekDate && date > isoWeekDate + 6) {\r\n                    return undefined;\r\n                }\r\n            }\r\n\r\n            return ISOweekStart;\r\n        }\r\n    }\r\n\r\n    angular.module('dateParser', [])\r\n        .provider('$dateParser', DateParser);\r\n}","///<reference path=\"../all.d.ts\"/>\r\n///<reference path=\"DateParser.ts\"/>\r\n\r\nmodule NgDateParser {\r\n    class DateParserDirective implements ng.IDirective {\r\n        'use strict';\r\n\r\n        restrict = 'A';\r\n        require = 'ngModel';\r\n        scope = {\r\n            ngModel: '='\r\n        };\r\n\r\n        constructor(private dateFilter, private $dateParser: IDateParser, private $locale: ng.ILocaleService) { }\r\n\r\n        link: ng.IDirectiveLinkFn = ($scope: ng.IScope, element: ng.IAugmentedJQuery, attrs: ng.IAttributes, ngModel: any) => {\r\n            let dateFormat: string;\r\n\r\n            attrs.$observe('dateParser', (value: string) => {\r\n                dateFormat = value;\r\n                ngModel.$render();\r\n            });\r\n\r\n            $scope.$watchCollection(() => this.$locale, (value, oldValue) => {\r\n                if(!angular.equals(value, oldValue)) {\r\n                    ngModel.$render();\r\n                }\r\n            });\r\n\r\n            ngModel.$parsers.unshift((viewValue) => {\r\n                let date = this.$dateParser(viewValue, dateFormat);\r\n\r\n                // Set validity when view value changes\r\n                ngModel.$setValidity('date', !viewValue || angular.isDate(date));\r\n\r\n                return date;\r\n            });\r\n\r\n            ngModel.$render = () => {\r\n                let modelValueExists = ngModel.$modelValue === '' || ngModel.$modelValue === null || ngModel.$modelValue;\r\n                element.val(modelValueExists ? this.dateFilter(ngModel.$modelValue, dateFormat) : undefined);\r\n                this.scope.ngModel = ngModel.$modelValue;\r\n            };\r\n\r\n            // Format the new model value before it is displayed\r\n            ngModel.$formatters.push((modelValue) => {\r\n                // Set validity when model value changes\r\n                ngModel.$setValidity('date', !modelValue || angular.isDate(modelValue));\r\n\r\n                return angular.isDate(modelValue) ? this.dateFilter(modelValue, dateFormat) : '';\r\n            });\r\n        }\r\n\r\n        static factory(): ng.IDirectiveFactory {\r\n            let directive: ng.IDirectiveFactory = (dateFilter, $dateParser, $locale) => new DateParserDirective(dateFilter, $dateParser, $locale);\r\n            directive.$inject = ['dateFilter', '$dateParser', '$locale'];\r\n            return directive;\r\n        }\r\n    }\r\n\r\n    angular.module('dateParser')\r\n        .directive('dateParser', DateParserDirective.factory());\r\n}"],"sourceRoot":"/source/"}