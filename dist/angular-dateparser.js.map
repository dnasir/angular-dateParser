{"version":3,"sources":["angular-dateparser.js","services/DateParser.ts","services/DateParserHelpers.ts","module.ts"],"names":[],"mappings":"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","file":"angular-dateparser.js","sourcesContent":[null,"///<reference path=\"../all.d.ts\"/>\r\n\r\nmodule NgDateParser {\r\n    export interface IDateParser {\r\n        parse(val:any, format?: string): Date;\r\n    }\r\n    \r\n    export class DateParser implements IDateParser {\r\n        'use strict';\r\n\r\n        private datetimeFormats: ng.ILocaleDateTimeFormatDescriptor;\r\n        private monthNames: string[];\r\n        private dayNames: string[];\r\n\r\n        constructor(\r\n            private $locale: ng.ILocaleService,\r\n            private dateParserHelpers: IDateParserHelpers\r\n        ) {\r\n            // Fetch date and time formats from $locale service\r\n            this.datetimeFormats = this.$locale.DATETIME_FORMATS;\r\n\r\n            // Build array of month and day names\r\n            this.monthNames = this.datetimeFormats.MONTH.concat(this.datetimeFormats.SHORTMONTH);\r\n            this.dayNames = this.datetimeFormats.DAY.concat(this.datetimeFormats.SHORTDAY);\r\n        }\r\n        \r\n        parse(val:any, format?: string): Date {\r\n            // if it's a Date object, return as-is\r\n            if (angular.isDate(val)) {\r\n                return val;\r\n            }\r\n            \r\n            // if it's anything other than a string, reject it\r\n            if(!angular.isString(val)){\r\n                return undefined;\r\n            }\r\n\r\n            try {\r\n                // If no format is provided, just pass it to the Date constructor\r\n                if (!format.length) {\r\n                    return new Date(val);\r\n                }\r\n\r\n                // Check if format exists in the format collection\r\n                if (this.datetimeFormats != null && this.datetimeFormats[format]) {\r\n                    format = this.datetimeFormats[format];\r\n                }\r\n\r\n                // Initial values\r\n                var now = new Date(),\r\n                    i_val = 0,\r\n                    i_format = 0,\r\n                    format_token = '',\r\n                    year = now.getFullYear(),\r\n                    month = now.getMonth() + 1,\r\n                    date = now.getDate(),\r\n                    hh = 0,\r\n                    mm = 0,\r\n                    ss = 0,\r\n                    sss = 0,\r\n                    ampm = 'am',\r\n                    z = 0,\r\n                    parsedZ = false;\r\n\r\n                // TODO: Extract this into a helper function perhaps?\r\n                while (i_format < format.length) {\r\n                    // Get next token from format string\r\n                    format_token = format.charAt(i_format);\r\n\r\n                    var token = '';\r\n\r\n                    // TODO: Handle double single quotes\r\n                    // Handle quote marks for strings within format string\r\n                    if (format.charAt(i_format) === \"'\") {\r\n                        var _i_format = i_format;\r\n\r\n                        while ((format.charAt(++i_format) !== \"'\") && (i_format < format.length)) {\r\n                            token += format.charAt(i_format);\r\n                        }\r\n\r\n                        if (val.substring(i_val, i_val + token.length) !== token) {\r\n                            throw 'Pattern value mismatch';\r\n                        }\r\n\r\n                        i_val += token.length;\r\n                        i_format++;\r\n\r\n                        continue;\r\n                    }\r\n\r\n                    while ((format.charAt(i_format) === format_token) && (i_format < format.length)) {\r\n                        token += format.charAt(i_format++);\r\n                    }\r\n\r\n                    // Extract contents of value based on format token\r\n                    if (token === 'yyyy' || token === 'yy' || token === 'y') {\r\n                        var minLength, maxLength;\r\n\r\n                        if (token === 'yyyy') {\r\n                            minLength = 4;\r\n                            maxLength = 4;\r\n                        }\r\n\r\n                        if (token === 'yy') {\r\n                            minLength = 2;\r\n                            maxLength = 2;\r\n                        }\r\n\r\n                        if (token === 'y') {\r\n                            minLength = 2;\r\n                            maxLength = 4;\r\n                        }\r\n\r\n                        year = this.dateParserHelpers.getInteger(val, i_val, minLength, maxLength);\r\n\r\n                        if (year === null) {\r\n                            throw 'Invalid year';\r\n                        }\r\n\r\n                        i_val += Math.max(year.toString().length, token.length);\r\n\r\n                        if (year.toString().length === 2) {\r\n                            if (year > 70) {\r\n                                year = 1900 + (year - 0);\r\n                            } else {\r\n                                year = 2000 + (year - 0);\r\n                            }\r\n                        }\r\n                    } else if (token === 'MMMM' || token === 'MMM') {\r\n                        month = 0;\r\n\r\n                        for (var i = 0; i < this.monthNames.length; i++) {\r\n                            var month_name = this.monthNames[i];\r\n\r\n                            if (val.substring(i_val, i_val + month_name.length).toLowerCase() === month_name.toLowerCase()) {\r\n                                month = i + 1;\r\n                                if (month > 12) {\r\n                                    month -= 12;\r\n                                }\r\n\r\n                                i_val += month_name.length;\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if ((month < 1) || (month > 12)) {\r\n                            throw 'Invalid month';\r\n                        }\r\n                    } else if (token === 'EEEE' || token === 'EEE') {\r\n                        for (var j = 0; j < this.dayNames.length; j++) {\r\n                            var day_name = this.dayNames[j];\r\n\r\n                            if (val.substring(i_val, i_val + day_name.length).toLowerCase() === day_name.toLowerCase()) {\r\n                                i_val += day_name.length;\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else if (token === 'MM' || token === 'M') {\r\n                        month = this.dateParserHelpers.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (month === null || (month < 1) || (month > 12)) {\r\n                            throw 'Invalid month';\r\n                        }\r\n\r\n                        i_val += Math.max(month.toString().length, token.length);\r\n                    } else if (token === 'dd' || token === 'd') {\r\n                        date = this.dateParserHelpers.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (date === null || (date < 1) || (date > 31)) {\r\n                            throw 'Invalid date';\r\n                        }\r\n\r\n                        i_val += Math.max(date.toString().length, token.length);\r\n                    } else if (token === 'HH' || token === 'H') {\r\n                        hh = this.dateParserHelpers.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (hh === null || (hh < 0) || (hh > 23)) {\r\n                            throw 'Invalid hours';\r\n                        }\r\n\r\n                        i_val += Math.max(hh.toString().length, token.length);\r\n                    } else if (token === 'hh' || token === 'h') {\r\n                        hh = this.dateParserHelpers.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (hh === null || (hh < 1) || (hh > 12)) {\r\n                            throw 'Invalid hours';\r\n                        }\r\n\r\n                        i_val += Math.max(hh.toString().length, token.length);\r\n                    } else if (token === 'mm' || token === 'm') {\r\n                        mm = this.dateParserHelpers.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (mm === null || (mm < 0) || (mm > 59)) {\r\n                            throw 'Invalid minutes';\r\n                        }\r\n\r\n                        i_val += Math.max(mm.toString().length, token.length);\r\n                    } else if (token === 'ss' || token === 's') {\r\n                        ss = this.dateParserHelpers.getInteger(val, i_val, token.length, 2);\r\n\r\n                        if (ss === null || (ss < 0) || (ss > 59)) {\r\n                            throw 'Invalid seconds';\r\n                        }\r\n\r\n                        i_val += Math.max(ss.toString().length, token.length);\r\n                    } else if (token === 'sss') {\r\n                        sss = this.dateParserHelpers.getInteger(val, i_val, 3, 3);\r\n\r\n                        if (sss === null || (sss < 0) || (sss > 999)) {\r\n                            throw 'Invalid milliseconds';\r\n                        }\r\n\r\n                        i_val += 3;\r\n                    } else if (token === 'a') {\r\n                        if (val.substring(i_val, i_val + 2).toLowerCase() === 'am') {\r\n                            ampm = 'AM';\r\n                        } else if (val.substring(i_val, i_val + 2).toLowerCase() === 'pm') {\r\n                            ampm = 'PM';\r\n                        } else {\r\n                            throw 'Invalid AM/PM';\r\n                        }\r\n\r\n                        i_val += 2;\r\n                    } else if (token === 'Z') {\r\n                        parsedZ = true;\r\n\r\n                        if (val[i_val] === 'Z') {\r\n                            z = 0;\r\n\r\n                            i_val += 1;\r\n                        } else {\r\n                            if (val[i_val + 3] === ':') {\r\n                                var tzStr = val.substring(i_val, i_val + 6);\r\n\r\n                                z = (parseInt(tzStr.substr(0, 3), 10) * 60) + parseInt(tzStr.substr(4, 2), 10);\r\n\r\n                                i_val += 6;\r\n                            } else {\r\n                                var tzStr = val.substring(i_val, i_val + 5);\r\n\r\n                                z = (parseInt(tzStr.substr(0, 3), 10) * 60) + parseInt(tzStr.substr(3, 2), 10);\r\n\r\n                                i_val += 5;\r\n                            }\r\n                        }\r\n\r\n                        if (z > 720 || z < -720) {\r\n                            throw 'Invalid timezone';\r\n                        }\r\n                    } else {\r\n                        if (val.substring(i_val, i_val + token.length) !== token) {\r\n                            throw 'Pattern value mismatch';\r\n                        } else {\r\n                            i_val += token.length;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // If there are any trailing characters left in the value, it doesn't match\r\n                if (i_val !== val.length) {\r\n                    throw 'Pattern value mismatch';\r\n                }\r\n\r\n                // Is date valid for month?\r\n                if (month === 2) {\r\n                    // Check for leap year\r\n                    if (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)) { // leap year\r\n                        if (date > 29) {\r\n                            throw 'Invalid date';\r\n                        }\r\n                    } else {\r\n                        if (date > 28) {\r\n                            throw 'Invalid date';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ((month === 4) || (month === 6) || (month === 9) || (month === 11)) {\r\n                    if (date > 30) {\r\n                        throw 'Invalid date';\r\n                    }\r\n                }\r\n\r\n                // Correct hours value\r\n                if (hh < 12 && ampm === 'PM') {\r\n                    hh += 12;\r\n                } else if (hh > 11 && ampm === 'AM') {\r\n                    hh -= 12;\r\n                }\r\n\r\n                var localDate = new Date(year, month - 1, date, hh, mm, ss, sss);\r\n\r\n                if (parsedZ) {\r\n                    return new Date(localDate.getTime() - (z + localDate.getTimezoneOffset()) * 60000);\r\n                }\r\n\r\n                return localDate;\r\n            } catch (e) {\r\n                // do we need to log the error somewhere?\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n}","///<reference path=\"../all.d.ts\"/>\r\n\r\nmodule NgDateParser {\r\n    export interface IDateParserHelpers {\r\n        getInteger(input: string, startPoint: number, minLength: number, maxLength: number): number;\r\n    }\r\n    \r\n    export class DateParserHelpers implements IDateParserHelpers {\r\n        'use strict';\r\n\r\n        private cache: string[];\r\n        \r\n        constructor() {\r\n            this.cache = [];\r\n        }\r\n\r\n        getInteger(input: string, startPoint: number, minLength: number, maxLength: number): number {\r\n            var val = input.substring(startPoint);\r\n            var key = `${minLength}_${maxLength}`;\r\n            var matcher = this.cache[key];\r\n            if (!matcher) {\r\n                matcher = new RegExp(`^(\\\\d{${minLength},${maxLength}})`);\r\n                this.cache[key] = matcher;\r\n            }\r\n\r\n            var match = matcher.exec(val);\r\n            if (match) {\r\n                return Number(match[1]);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n}","///<reference path=\"all.d.ts\"/>\r\n\r\nmodule NgDateParser {\r\n    'use strict';\r\n\r\n    angular.module('dateParser', [])\r\n        .service('dateParserHelpers', DateParserHelpers)\r\n        .factory('$dateParser', ['$locale', 'dateParserHelpers', ($locale, dateParserHelpers) => {\r\n            var instance = new DateParser($locale, dateParserHelpers);\r\n            \r\n            return function(val, format) {\r\n                return instance.parse(val, format);\r\n            };\r\n        }]);\r\n}\r\n"],"sourceRoot":"/source/"}