/*!
 * angular-dateParser 1.1.0
 * https://github.com/dnasir/angular-dateParser
 * Copyright (c) 2016, Dzulqarnain Nasir
 * Licensed under: MIT
 */

var NgDateParser;!function(NgDateParser){var DateParser=function(){function DateParser(){var _this=this;this.$get=function($filter,$locale,$rootScope){return _this.$locale=$locale,_this.$dateFilter=$filter("date"),_this.updateFromLocale(),_this._watchLocale&&$rootScope.$watchCollection(function(){return $locale},function(){_this.updateFromLocale()}),_this.parse},this.parse=function(val,format){if(angular.isDate(val))return val;if(angular.isString(val))try{if(!format.length)return new Date(val);null!=_this.datetimeFormats&&_this.datetimeFormats[format]&&(format=_this.datetimeFormats[format]);for(var now=new Date,i_val=0,i_format=0,format_token="",year=null,week=null,month=null,date=null,hh=0,mm=0,ss=0,sss=0,ampm="am",z=0,parsedZ=!1;i_format<format.length;){format_token=format.charAt(i_format);var token="";if("'"!==format.charAt(i_format)){for(;format.charAt(i_format)===format_token&&i_format<format.length;)token+=format.charAt(i_format++);if("yyyy"===token||"yy"===token||"y"===token){var minLength,maxLength;if("yyyy"===token&&(minLength=4,maxLength=4),"yy"===token&&(minLength=2,maxLength=2),"y"===token&&(minLength=2,maxLength=4),year=_this.getInteger(val,i_val,minLength,maxLength),null===year)throw"Invalid year";i_val+=Math.max(year.toString().length,token.length),2===year.toString().length&&(year=year>70?1900+(year-0):2e3+(year-0))}else if("ww"===token||"w"===token)week=_this.getInteger(val,i_val,token.length,2),i_val+=Math.max(week.toString().length,token.length);else if("MMMM"===token||"MMM"===token){month=0;for(var i=0;i<_this.monthNames.length;i++){var month_name=_this.monthNames[i];if(val.substring(i_val,i_val+month_name.length).toLowerCase()===month_name.toLowerCase()){month=i+1,month>12&&(month-=12),i_val+=month_name.length;break}}if(1>month||month>12)throw"Invalid month"}else if("EEEE"===token||"EEE"===token)for(var j=0;j<_this.dayNames.length;j++){var day_name=_this.dayNames[j];if(val.substring(i_val,i_val+day_name.length).toLowerCase()===day_name.toLowerCase()){i_val+=day_name.length;break}}else if("MM"===token||"M"===token){if(month=_this.getInteger(val,i_val,token.length,2),null===month||1>month||month>12)throw"Invalid month";i_val+=Math.max(month.toString().length,token.length)}else if("dd"===token||"d"===token){if(date=_this.getInteger(val,i_val,token.length,2),null===date||1>date||date>31)throw"Invalid date";i_val+=Math.max(date.toString().length,token.length)}else if("HH"===token||"H"===token){if(hh=_this.getInteger(val,i_val,token.length,2),null===hh||0>hh||hh>23)throw"Invalid hours";i_val+=Math.max(hh.toString().length,token.length)}else if("hh"===token||"h"===token){if(hh=_this.getInteger(val,i_val,token.length,2),null===hh||1>hh||hh>12)throw"Invalid hours";i_val+=Math.max(hh.toString().length,token.length)}else if("mm"===token||"m"===token){if(mm=_this.getInteger(val,i_val,token.length,2),null===mm||0>mm||mm>59)throw"Invalid minutes";i_val+=Math.max(mm.toString().length,token.length)}else if("ss"===token||"s"===token){if(ss=_this.getInteger(val,i_val,token.length,2),null===ss||0>ss||ss>59)throw"Invalid seconds";i_val+=Math.max(ss.toString().length,token.length)}else if("sss"===token){if(sss=_this.getInteger(val,i_val,3,3),null===sss||0>sss||sss>999)throw"Invalid milliseconds";i_val+=3}else if("a"===token){if("am"===val.substring(i_val,i_val+2).toLowerCase())ampm="AM";else{if("pm"!==val.substring(i_val,i_val+2).toLowerCase())throw"Invalid AM/PM";ampm="PM"}i_val+=2}else if("Z"===token){if(parsedZ=!0,"Z"===val[i_val])z=0,i_val+=1;else if(":"===val[i_val+3]){var tzStr=val.substring(i_val,i_val+6);z=60*parseInt(tzStr.substr(0,3),10)+parseInt(tzStr.substr(4,2),10),i_val+=6}else{var tzStr=val.substring(i_val,i_val+5);z=60*parseInt(tzStr.substr(0,3),10)+parseInt(tzStr.substr(3,2),10),i_val+=5}if(z>720||-720>z)throw"Invalid timezone"}else{if(val.substring(i_val,i_val+token.length)!==token)throw"Pattern value mismatch";i_val+=token.length}}else{for(;"'"!==format.charAt(++i_format)&&i_format<format.length;)token+=format.charAt(i_format);if(val.substring(i_val,i_val+token.length)!==token)throw"Pattern value mismatch";i_val+=token.length,i_format++}}if(i_val!==val.length)throw"Pattern value mismatch";if(2===month)if(year%4===0&&year%100!==0||year%400===0){if(date>29)throw"Invalid date"}else if(date>28)throw"Invalid date";if((4===month||6===month||9===month||11===month)&&date>30)throw"Invalid date";12>hh&&"PM"===ampm?hh+=12:hh>11&&"AM"===ampm&&(hh-=12);var localDate=new Date(year||now.getFullYear(),null!==month?month-1:now.getMonth(),date||now.getDate(),hh,mm,ss,sss);if(null!==week){var dateFromISOWeek=_this.getDateOfISOWeek(week,year||now.getFullYear(),month,date);if(!dateFromISOWeek)throw"Invalid week number or week number/date mismatch";null!==month&&dateFromISOWeek.setMonth(month-1),null!==date&&dateFromISOWeek.setDate(date),dateFromISOWeek.setHours(hh),dateFromISOWeek.setMinutes(mm),dateFromISOWeek.setSeconds(ss),dateFromISOWeek.setMilliseconds(sss),localDate=dateFromISOWeek}return parsedZ?new Date(localDate.getTime()-6e4*(z+localDate.getTimezoneOffset())):localDate}catch(e){return void console.info(e)}},this.cache=[],this._watchLocale=!1,this.$get.$inject=["$filter","$locale","$rootScope"]}return DateParser.prototype.updateFromLocale=function(){this.datetimeFormats=this.$locale.DATETIME_FORMATS,this.monthNames=this.datetimeFormats.MONTH.concat(this.datetimeFormats.SHORTMONTH),this.dayNames=this.datetimeFormats.DAY.concat(this.datetimeFormats.SHORTDAY)},DateParser.prototype.watchLocale=function(watch){return angular.isDefined(watch)?void(this._watchLocale=watch):this._watchLocale},DateParser.prototype.getInteger=function(input,startPoint,minLength,maxLength){var val=input.substring(startPoint),key=minLength+"_"+maxLength,matcher=this.cache[key];matcher||(matcher=new RegExp("^(\\d{"+minLength+","+maxLength+"})"),this.cache[key]=matcher);var match=matcher.exec(val);return match?Number(match[1]):null},DateParser.prototype.getDateOfISOWeek=function(week,year,month,date){if(!(1>week)){var simple=new Date(year,0,1+7*(week-1)),dow=simple.getDay(),ISOweekStart=simple;if(4>=dow?ISOweekStart.setDate(simple.getDate()-simple.getDay()+1):ISOweekStart.setDate(simple.getDate()+8-simple.getDay()),ISOweekStart.getFullYear()===year&&(null===month||ISOweekStart.getMonth()===month-1)){if(null!==date){var isoWeekDate=ISOweekStart.getDate();if(isoWeekDate>date&&date>isoWeekDate+6)return}return ISOweekStart}}},DateParser}();angular.module("dateParser",[]).provider("$dateParser",DateParser)}(NgDateParser||(NgDateParser={}));var NgDateParser;!function(NgDateParser){var DateParserDirective=function(){function DateParserDirective(dateFilter,$dateParser,$locale){var _this=this;this.dateFilter=dateFilter,this.$dateParser=$dateParser,this.$locale=$locale,this.restrict="A",this.require="ngModel",this.scope={ngModel:"="},this.link=function($scope,element,attrs,ngModel){var dateFormat;attrs.$observe("dateParser",function(value){dateFormat=value,ngModel.$render()}),$scope.$watchCollection(function(){return _this.$locale},function(value,oldValue){angular.equals(value,oldValue)||ngModel.$render()}),ngModel.$parsers.unshift(function(viewValue){var date=_this.$dateParser(viewValue,dateFormat);return ngModel.$setValidity("date",!viewValue||angular.isDate(date)),date}),ngModel.$render=function(){var modelValueExists=""===ngModel.$modelValue||null===ngModel.$modelValue||ngModel.$modelValue;element.val(modelValueExists?_this.dateFilter(ngModel.$modelValue,dateFormat):void 0),_this.scope.ngModel=ngModel.$modelValue},ngModel.$formatters.push(function(modelValue){return ngModel.$setValidity("date",!modelValue||angular.isDate(modelValue)),angular.isDate(modelValue)?_this.dateFilter(modelValue,dateFormat):""})}}return DateParserDirective.factory=function(){var directive=function(dateFilter,$dateParser,$locale){return new DateParserDirective(dateFilter,$dateParser,$locale)};return directive.$inject=["dateFilter","$dateParser","$locale"],directive},DateParserDirective}();angular.module("dateParser").directive("dateParser",DateParserDirective.factory())}(NgDateParser||(NgDateParser={}));
//# sourceMappingURL=angular-dateparser.min.js.map
